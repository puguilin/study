<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!--导入属性配置application-local.properties-->
 <!--   <properties resource="application.properties"></properties>-->
    <properties resource="./config/application-local.properties"></properties>
    <!--指定特定数据库的jdbc驱动jar包的位置-->
   <!-- <classPathEntry location="${spring.driverLocation}"/>-->
    <classPathEntry location="E:/maven_repository/mysql/mysql-connector-java/8.0.27/mysql-connector-java-8.0.27.jar" />

    <!-- 一个数据库一个context -->

    <context id="default" targetRuntime="MyBatis3" defaultModelType="flat">
        <property name="autoDelimitKeywords" value="true" />
        <property name="beginningDelimiter" value="`" />
        <property name="endingDelimiter" value="`" />
        <property name="javaFileEncoding" value="utf-8" />
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin" />
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin" />



        <!--覆盖生成xml文件-->
        <plugin type="org.mybatis.generator.plugins.UnmergeableXmlMappersPlugin" />

        <!-- optional，旨在创建class时，对注释进行控制 -->
        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!--jdbc的数据库连接 -->
        <jdbcConnection
                driverClass="${spring.datasource.driver-class-name}"
                connectionURL="${spring.datasource.url}"
                userId="${spring.datasource.username}"
                password="${spring.datasource.password}">
        </jdbcConnection>


        <!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制-->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>


        <!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类
            targetPackage     指定生成的model生成所在的包名
            targetProject     指定在该项目下所在的路径
        -->

        <javaModelGenerator targetPackage="com.guilin.studycode.entrity" targetProject="./src/main/java">
            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="false"/>
            <!-- 是否对model添加 构造函数 -->
            <property name="constructorBased" value="true"/>
            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimStrings" value="true"/>
            <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->
            <property name="immutable" value="false"/>
        </javaModelGenerator>

        <!--mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 -->

        <sqlMapGenerator targetPackage="mappers" targetProject="./src/main/resources">
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!-- targetPackage：mapper接口dao生成的位置 -->

        <javaClientGenerator type="XMLMAPPER" targetPackage="com.guilin.studycode.mapper" targetProject="./src/main/java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false" />
        </javaClientGenerator>


        <!--<table tableName="student" domainObjectName="Student" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"></table>-->
        <table tableName="cc_business_personnel_t"
               domainObjectName="BusinessPersonnel"
               enableCountByExample="false"
               enableUpdateByExample="false"
               enableDeleteByExample="false"
               enableSelectByExample="false"
               selectByExampleQueryId="false">
            <!--MySQL表里面的Address字段是text类型的，这样处理产生的Xml文件自动会把这个字段转换为VARCHAR；
               就不会出现 <resultMap id="ResultMapWithBLOBs"
               Mybatis自动生成Xml文件，针对字段类型为text等会默认产生XXXXWithBlobs的方法问题...
               解决方法 https://blog.csdn.net/weixin_30621711/article/details/96010295?spm=1001.2101.3001.6650.3&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-3-96010295-blog-83180450.pc_relevant_multi_platform_whitelistv1&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-3-96010295-blog-83180450.pc_relevant_multi_platform_whitelistv1&utm_relevant_index=6
            -->
            <columnOverride column="zb_back_jsonstr" javaType="java.lang.String" jdbcType="VARCHAR" />
            <columnOverride column="zb_call_jsonstr" javaType="java.lang.String" jdbcType="VARCHAR" />
            <columnOverride column="pay_result_jsonstr" javaType="java.lang.String" jdbcType="VARCHAR" />
            <columnOverride column="pay_respons_jsonstr" javaType="java.lang.String" jdbcType="VARCHAR" />
        </table>


        <!-- geelynote mybatis插件的搭建 -->
    </context>
</generatorConfiguration>